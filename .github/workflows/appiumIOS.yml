# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Appium iOS

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest # the machine type
    strategy:
      matrix:
#        destination: [ 'platform=iOS Simulator,OS=15.2,name=iPhone 12' ]
        api-level: [ 27 ] #Google api level for example [25,23,28]
        target: [ default ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Install and Run Appium Server
      run: |
          chmod +x ./scripts/RunAppiumServer.sh # install and run appium server in the background
          ./scripts/RunAppiumServer.sh    

#    - uses: actions/setup-node@v2
#      with:
#       node-version: '10.16.3'

#    - run: |
#        chmod +x ./scripts/RunAppiumServer.sh # install and run appium server in the background
#        ./scripts/RunAppiumServer.sh
#    - name: Run Appium iOS Tests
#      with:
#        api-level: ${{ matrix.api-level }}
#        target: ${{ matrix.target }}
#        arch: x86_64
#        profile: Nexus 6
#        script: gradle test -DCucumber.options="-tags @landIOS" # running our test with info to check the results

#  steps:
#    - name: Checkout source code
#      uses: actions/checkout@v1
#    - name: Set up Node.js
#      uses: actions/setup-node@v1
#      with:
#        node-version: '10.16.3'

#    - name: Set up Appium
#      run: npm install appium
#    - name: Run Appium Server
#      run: ./node_modules/.bin/appium --log-timestamp --log-no-colors > appium.log &

    - name: Test iOS with Gradle
      run: gradle test -DCucumber.options="-tags @baseIOS" # running our test with info to check the results
      continue-on-error: true