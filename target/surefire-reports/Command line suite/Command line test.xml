<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="PLPC017457" ignored="0" name="Command line test" tests="8" failures="0" timestamp="2021-12-28T15:14:58 CET" time="0.028" errors="0">
  <testcase name="@BeforeClass setupClassGlobal" time="-1.640700898047E9" classname="capabilities.BaseClass">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a @BeforeClass annotated setupClassGlobal.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @BeforeClass annotated setupClassGlobal.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at java.util.ArrayList.forEach(ArrayList.java:1259)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setupClassGlobal -->
  <testcase name="@BeforeMethod setupGlobal" time="-1.640700898057E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupGlobal -->
  <testcase name="@AfterMethod cleanUpGlobal" time="-1.640700898059E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUpGlobal -->
  <testcase name="@BeforeMethod setupGlobal" time="-1.64070089806E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupGlobal -->
  <testcase name="@AfterMethod cleanUpGlobal" time="-1.64070089806E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUpGlobal -->
  <testcase name="@BeforeMethod setupGlobal" time="-1.640700898061E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupGlobal -->
  <testcase name="@AfterMethod cleanUpGlobal" time="-1.640700898061E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUpGlobal -->
  <testcase name="@BeforeMethod setupGlobal" time="-1.640700898062E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupGlobal -->
  <testcase name="@AfterMethod cleanUpGlobal" time="-1.640700898062E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUpGlobal -->
  <testcase name="@BeforeMethod setupGlobal" time="-1.640700898062E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupGlobal -->
  <testcase name="@AfterMethod cleanUpGlobal" time="-1.640700898062E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUpGlobal -->
  <testcase name="@BeforeMethod setupGlobal" time="-1.640700898063E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupGlobal -->
  <testcase name="@AfterMethod cleanUpGlobal" time="-1.640700898063E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUpGlobal -->
  <testcase name="@BeforeMethod setupGlobal" time="-1.640700898064E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupGlobal -->
  <testcase name="@AfterMethod cleanUpGlobal" time="-1.640700898064E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUpGlobal -->
  <testcase name="@BeforeMethod setupGlobal" time="-1.640700898064E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setupGlobal -->
  <testcase name="@AfterMethod cleanUpGlobal" time="-1.640700898064E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod cleanUpGlobal -->
  <testcase name="@AfterClass cleanUpClassGlobal" time="-1.640700898065E9" classname="capabilities.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterClass cleanUpClassGlobal -->
  <testcase name="verify_app_flow_page" time="0.0" classname="tests.ios.AppiumiOSTest">
    <skipped/>
  </testcase> <!-- verify_app_flow_page -->
  <testcase name="verify_capture_name_page" time="0.0" classname="tests.ios.AppiumiOSTest">
    <skipped/>
  </testcase> <!-- verify_capture_name_page -->
  <testcase name="verify_capture_phone_page" time="0.0" classname="tests.ios.AppiumiOSTest">
    <skipped/>
  </testcase> <!-- verify_capture_phone_page -->
  <testcase name="verify_eligbility_page" time="0.0" classname="tests.ios.AppiumiOSTest">
    <skipped/>
  </testcase> <!-- verify_eligbility_page -->
  <testcase name="verify_launching_page" time="0.0" classname="tests.ios.AppiumiOSTest">
    <skipped/>
  </testcase> <!-- verify_launching_page -->
  <testcase name="verify_product_carousel_page" time="0.0" classname="tests.ios.AppiumiOSTest">
    <skipped/>
  </testcase> <!-- verify_product_carousel_page -->
  <testcase name="verify_product_eligibility_modal" time="0.0" classname="tests.ios.AppiumiOSTest">
    <skipped/>
  </testcase> <!-- verify_product_eligibility_modal -->
  <testcase name="verify_terms_conditions_page" time="0.0" classname="tests.ios.AppiumiOSTest">
    <skipped/>
  </testcase> <!-- verify_terms_conditions_page -->
</testsuite> <!-- Command line test -->
